{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Algas y German data - NA's \"\nauthor: \"Ricardo Lastra\"\ndate: \"30 de octubre de 2017\"\noutput: html_document\n---\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\nsetwd(\"C:/Users/FORANEA110/Desktop/MINERIA/Tareas/algas/tarea_nas\")\n```\n\n### Tarea 6\n\n&nbsp;\n\n#### Valores faltantes: `NAs`\n\n&nbsp;\n\n\n```{r echo=T, warning=F, error=T, message=F}\nsource(\"run.R\")\n```\n\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\nx <- as.data.frame(abs(is.na(data))) # df es un data.frame\ny <- x[which(sapply(x, sd) > 0)] \ncor(y)\n```\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\nsummary(y)\n```\n\n&nbsp;\n\n#### Ejercicio 1.\n\n    * Genera un reporte para ambos conjuntos de datos que indique el estado de los valores missing.\n    * Muestra la matriz de correlación faltante en una gráfica.\n    * ¿Qué puedes interpretar?\n\n&nbsp;\n\n##### **Reporte algas:**\n\n```{r results='asis', echo=T, warning=F, error=T, message=F}\n#install.packages(\"stargazer\")\nlibrary(stargazer)\nsuma <- colSums(y)\nstargazer::stargazer(suma, type = \"html\", title = \"Suma de Missings por Variable\")\n```\n\n&nbsp;\n\nEn la tabla anterior podemos observar que la variable `chla` es la que tiene mayor numero de Missings con 12 valores, seguida de la variable `cl` con 10 valores.\n\n&nbsp;\n\n```{r results='asis', echo=T, warning=F, error=F, message=F}\n#install.packages(\"kableExtra\")\nlibrary(knitr)\nlibrary(kableExtra)\nporcentaje <- (colSums(y)/nrow(y))*100\nkable(porcentaje, format = \"html\",caption = \"Porcentaje de Missings por Variable  % \")  %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = F, position = \"left\")\n```\n\n6% y 5% son los mayores porcentajes de variables con missings y corresponden a las variables `chla` y `cl`  respectivamente. \n\n&nbsp;\n\n\n```{r results='asis', echo=T, warning=F, error=F, message=F}\nkable(summary(y), format = \"html\",caption = \"Summary table por Variable\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n```\n\n\n&nbsp;\n\n\n```{r results='asis', echo=T, warning=F, error=F, message=F}\nlibrary(Amelia) #Libreria para graficar Missings, contribución de A. Nieto\nmissmap(data, main=\"Grafica de Missings, todas las variables\", \n        col=c(\"red\", \"black\"), legend=F) \n```\n\nMostramos de una forma muy visual, cuales son las variables del dataset que contienen los Missings\n\n&nbsp;\n\n```{r results='asis', echo=T, warning=F, error=F, message=F}\nmissmap(data %>% select(\"max_ph\",\"min_o2\",\"cl\",\"no3\",\"nh4\",\"opo4\",\"po4\",\"chla\"), main=\"Grafica de variables con Missings\", \n        col=c(\"red\", \"black\"), legend=F) \n```\n\nObservamos cuales son las variables de forma especifica que contienen Missings\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\nggcorr(y,low = \"gray\", mid = \"yellow\", high = \"red\", nbreaks = 5, label=T,label_size = 3) \n```\n\nPor el momento podemos decir que las variables con Missings que mas estan correlacionadas son la `no3`, `nh4` y `opo4` en seguida de las variables `cl` y `chla`. La variable `max_ph` es la que menos correlacionada esta. En proximos ejemplos veremos la correlacion entre variables con y sin Missings.\n\n&nbsp;\n\n\n##### **Reporte GERMAN:**\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\nsetwd(\"C:/Users/FORANEA110/Desktop/MINERIA/Tareas/GERMAN/\")\nsource(\"run.R\")\n```\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\nx <- as.data.frame(abs(is.na(data))) # df es un data.frame\ny <- x[which(sapply(x, sd) > 0)] \ncor(y)\n```\n\nAl oarecer no hay ninguna variable con Missings en el dataset de German.\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\nsummary(y)\n```\n\nValidamos con un summary y esta vacio el set de Missings.\n\n&nbsp;\n\n\n```{r results='asis', echo=T, warning=F, error=F, message=F}\nlibrary(Amelia) #Libreria para graficar Missings, contribución de A. Nieto\nmissmap(data, main=\"Grafica de Missings, todas las variables\", \n        col=c(\"red\", \"black\"), legend=F) \n```\n\n&nbsp;\n\nRevisamos visualmente cuales son las variables con Missings, y observamos que German **NO** tiene variables con Missings. \n\n\n&nbsp;\n\n\n### Regresamos a Ejercicio `Algas` y observamos como en clase:\n\n&nbsp;\n\n```{r echo=T, warning=F, error=T, message=F}\nsetwd(\"C:/Users/FORANEA110/Desktop/MINERIA/Tareas/algas/tarea_nas\")\nsource(\"run.R\")\n```\n\nContamos las observaciones con NA`s\n\n```{r}\nnrow(data[!complete.cases(data),])\n```\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\n# Si queremos remover las que tengan más del 20% de NAs...\ndata_con_NAs <- data[!complete.cases(data),]\ndata <- data[-indices_con_NAs(data, 0.2),]\ndim(data)\n```\n\n&nbsp;\n\nVolvemos a contar observaciones.\n```{r}\nnrow(data[!complete.cases(data),])\n```\n\n&nbsp;\n\n#### Ejercicio 2.\n\n    * ¿A qué variables del set de datos de algas les puedes aplicar este procedimiento?\n    * ¿Qué puedes decir de german_data?\n    * A las variables que no se les puede aplicar, explica por qué no.\n    \n&nbsp;\n    \nExploramos para ver a que variables les podemos aplicar  la estrategia de **Centralidad**:\n\n&nbsp;\n\n```{r echo=T, warning=F, error=F, message=F}\ndatan <- data %>%\n  select(-starts_with(\"a\")) %>% \n  select(-which(sapply(.,is.character)))\npar(mfrow=c(2, 4))\ncolnames <- dimnames(datan)[[2]]\nfor (i in 1:8) {\n  boxplot(datan[,i], main=colnames[i], col=\"lightblue\")\n}\n```\n&nbsp;\n\nPodemos aplicar el procedimiento a las variables:  `max_ph`,`cl`,`no3`, y quiza `nh4`, ya que su distribucion parece \"normal\" aunque puede ser engañoso por que los \"outliers parecen muy amplios\" si observamos que cada `boxplot` tiene escalas diferentes.\n\nDe `German Data` no podemos aplicar lo mismo ya que no contiene Missings.\n\nA las variables que no se les puede aplicar es por que sus distribuciones son diferentes a la normal, y como el caso de las variables \"opo4\",\"po4\"y \"chla\" los outliers son demasiados y en un rango muy amplio, lo cual no ayuda a imputar \"sanamente\" los missings.\n\n&nbsp;\n\n    * Esta decisión debe de ser reproducible, agrega a utils.R una función que impute en las variables con NAs el valor central (median si es numérica,  moda si es categórica). La función debe de tener la siguiente firma:\n    \n&nbsp;\n    \n```{r, eval=FALSE}\nimputar_valor_central <- function(data, colnames){\n  \n  data <- data.frame(data)\n  numericvars <- character(length = ncol(data))\n  charvars <- character(length = ncol(data))\n  colnames <- colnames(data)\n  \n  for(i in seq_len(ncol(data))) {\n    if(class(data[, i]) == \"numeric\") {\n      numericvars[i] <- colnames[i]\n    }\n    else {\n      if(class(data[, i]) == \"character\") {\n        charvars[i] <- colnames[i]\n      }\n    }\n  }\n  \n  subset_numeric <- data %>% \n    select(one_of(numericvars))\n  subset_chr <- data %>% \n    select(one_of(charvars))\n  \n  for(i in seq_len(ncol(data))) {\n    if(length(subset_numeric)!=0){\n      subset_numeric %>% \n        mutate(colnames[i] <- ifelse(is.na(colnames[i]),median(colnames[i], na.rm = T),colnames[i]))\n    }\n    else{\n      if(length(subset_chr)!=0){\n        subset_chr %>% \n          mutate(colnames[i] <- ifelse(is.na(colnames[i]),getmode(colnames[i], na.rm = T),colnames[i]))\n      }\n    }\n  }\n  return(data)\n}\n```\n\n\n#### Ejercicio 3.\n\nCrea una función que sustituya los NAs con el valor dado por la regresión lineal recién calculada (No automatices la regresión lineal) usando la siguiente firma\nimputar_valor_lm <- function(var_independiente, modelo) { ... } p04\n\n\n#### Ejercicio 4.\n\nTarea 6. Ejercicio 4\n\nImplementa una función que impute por similitud con la firma kkn\nimputar_por_similitud <- function(data, num_vecinos) { ... }\nAplícalo a algas y german.\n¿Son muy diferentes las estadísticas ignorando los NAs comparadas con este método?\n\n\n\n#### Ejercicio 5.\n\nTarea 6, Ejercicio 5\n\nEste es un buen momento para dejar de duplicar código y concentrar todas las funciones de utils.R que se puedan reutilizar en un archivo  toolset.R. Ajusta tus demás archivos de acuerdo a este cambio -si aplica-\nCrea un R notebook para cada dataset utilizando los archivos reproducibles y el archivo toolset.R. Incluye en estos notebook la estructura de los datos, GEDA transformaciones de los datos y observaciones pertinentes (como outliers, estructura de los datos faltantes). Explica los métodos de imputación que usaste (si fué necesario) y porqué los usaste.\n\n\n(----ejemplos---)\n",
    "created" : 1510196801320.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "118568181",
    "id" : "CF4130FF",
    "lastKnownWriteTime" : 1510202798,
    "last_content_update" : 1510202798378,
    "path" : "C:/Users/FORANEA110/Desktop/MINERIA/Tareas/algas/tarea_nas/algas_nas_tarea6_rlc.Rmd",
    "project_path" : null,
    "properties" : {
        "last_setup_crc32" : "5A07D1A28f34a77c",
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}